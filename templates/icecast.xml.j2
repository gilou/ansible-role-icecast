<icecast>
    <!-- location and admin are two arbitrary strings that are e.g. visible
         on the server info page of the icecast web interface
         (server_version.xsl). -->
    <location>{{ icecast_location }}</location>
    <admin>{{ icecast_admin_email }}</admin>
    <limits>
        <clients>{{ icecast_max_clients }}</clients>
        <sources>{{ icecast_max_sources }}</sources>
        <queue-size>524288</queue-size>
        <client-timeout>30</client-timeout>
        <header-timeout>15</header-timeout>
        <source-timeout>10</source-timeout>
        <burst-size>65535</burst-size>
    </limits>

    <authentication>
        <source-password>{{ icecast_source_password }}</source-password>
        <relay-password>{{ icecast_relay_password }}</relay-password>
        <admin-user>{{ icecast_admin_user }}</admin-user>
        <admin-password>{{ icecast_admin_password }}</admin-password>
    </authentication>
    <directory>
        <yp-url-timeout>15</yp-url-timeout>
        <yp-url>http://dir.xiph.org/cgi-bin/yp-cgi</yp-url>
    </directory>

    <hostname>{{ icecast_hostname }}</hostname>
    <listen-socket>
        <port>8000</port>
	    <bind-address>::</bind-address>
    </listen-socket>
    {% if icecast_use_capabilities %}
    <listen-socket>
        <port>80</port>
	    <bind-address>::</bind-address>
    </listen-socket>
    {% endif %}
    {% if icecast_use_tls and icecast_use_capabilities %}
    <listen-socket>
        <port>443</port>
	<ssl>1</ssl>
	<bind-address>::</bind-address>
    </listen-socket>
    {% endif %}
    <http-headers>
        <header name="Access-Control-Allow-Origin" value="*" />
    </http-headers>
    <paths>
        <basedir>{{ icecast_base_dir }}</basedir>
        <logdir>/var/log/icecast2</logdir>
        <webroot>{{ icecast_base_dir }}/web</webroot>
        <adminroot>{{ icecast_base_dir }}/admin</adminroot>
        <alias source="/" destination="/status.xsl"/>
        <!-- The certificate file needs to contain both public and private part.
             Both should be PEM encoded.
        <ssl-certificate>/etc/icecast2/ssl/icecast.pem</ssl-certificate>
	-->
    </paths>

{% for hosted in icecast_hosting %}
{% include 'config_' + hosted + '.j2' %}
{% endfor %}
    <logging>
        <accesslog>access.log</accesslog>
        <errorlog>error.log</errorlog>
        <!-- <playlistlog>playlist.log</playlistlog> -->
        <loglevel>3</loglevel> <!-- 4 Debug, 3 Info, 2 Warn, 1 Error -->
    </logging>
    <security>
{% if icecast_use_tls %}
    <tls-context>
        <tls-certificate>/etc/letsencrypt/live/{{ icecast_hostname }}/fullchain.pem</tls-certificate>
        <tls-key>/etc/letsencrypt/live/{{ icecast_hostname }}/privkey.pem</tls-key>
    </tls-context>
       
{% endif %}
        <chroot>0</chroot>
        <changeowner>
            <user>icecast2</user>
            <group>icecast</group>
        </changeowner>
    </security>
</icecast>
